#!/bin/bash

GHZ24=0;
PATTERN="";

function showOptions() {
	echo;
	echo "Usage: findwifi <INTERFACE> <options>";
	echo;
	echo "Options";
	echo;
	echo "  -2                Only show 2.4GHz networks.";
	echo "  -filter <REGEXP>  Filter by regexp string.";
	echo;
}

function isInterface() {
	if [[ ! -z `grep -a "^\\s*Interface\\s$1" <<< \`iw dev\`` ]]; then
		return 1;
	fi;

	return 0;
}

if isInterface "$1"; then
	echo "error: invalid interface: $1"
	showOptions;
	exit 1;
fi

CVARS=("$@");
i=0;
for CVAR in "${CVARS[@]}"; do
	if [[ ! -z `grep -ai "^[-]\{1,\}2\$" <<< $CVAR` ]]; then
		GHZ24=1;
	elif [[ ! -z `grep -ai "^[-]\{1,\}filter\$" <<< $CVAR` ]]; then
		PATTERN="${CVARS[$i+1]}";
	fi;

	let i++;
done;

ip link set "$1" up;

APS_STR=`iw builtin scan | grep -ao "SSID:.*\$\|signal:.*\$\|freq:.*\$\|cipher.*\$\|suites:.*\$\|^BSS.*\$" | sed "s/[(]on \\w\+[)]//g" | sed "s/^BSS/\\nBSSID:/g" | sed "s/^SSID:.\(.*\)\$/SSID: \x1b[33m\1\x1b[0m/g"`;

if [[ -z "$APS_STR" ]]; then
	sleep 1;
	echo "$(findwifi $@)";
else
	EOL=`pwgen -s 32 1`;
	SPACE=`pwgen -s 32 1`;

	ESC_APS_STR=`sed "s/^\$/$EOL/g" <<< "$APS_STR"`;
	ESC_APS_STR=`sed "s/\$/$EOL/g" <<< "$ESC_APS_STR"`;
	ESC_APS_STR=`echo $ESC_APS_STR | sed "s/\\s/$SPACE/g"`;

	ESC_APS="${ESC_APS_STR//${EOL}${EOL}/ }";
	for ESC_AP in $ESC_APS; do
		ESC_AP=`sed "s/$EOL/ /g" <<< $ESC_AP`;
		AP=`sed "s/$SPACE/ /g" <<< $ESC_AP`;

		if [[ $GHZ24 -eq 1 && ! -z "$PATTERN" ]]; then
			if [[ \
				   ! -z `grep -a "freq: 2[0-9]\{3\}" <<< $AP` \
				&& ! -z `grep -a "$PATTERN"           <<< $AP` \
			]]; then
				echo "$AP" | sed "s/^ //g" | sed "s/\\s*\$//g";
			fi;
		elif [[ $GHZ24 -eq 1 ]]; then
		   if [[ ! -z `grep -a "freq: 2[0-9]\{3\}" <<< $AP` ]]; then
				echo "$AP" | sed "s/^ //g" | sed "s/\\s*\$//g";
		   fi;
		elif [[ ! -z "$PATTERN" ]]; then
			if [[ ! -z `grep -a "$PATTERN" <<< $AP` ]]; then
				echo "$AP" | sed "s/^ //g" | sed "s/\\s*\$//g";
			fi;
		else
			echo "$AP" | sed "s/^ //g" | sed "s/\\s*\$//g";
		fi;
	done;
fi;
